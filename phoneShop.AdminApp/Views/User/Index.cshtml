@using phoneShop.ViewModels.Common
@model PagedResult<phoneShop.ViewModels.Admin.UserViewModel>
    @{
        ViewData["Title"] = "Index";
    }

    @section Scripts{
        <script>
    setTimeout(function () {
                $('#msgAlert').fadeOut('slow');
            }, 2000);</script>
    }

    <div class="container-fluid">
        <h1 class="mt-4">Danh sách người dùng</h1>
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
            <li class="breadcrumb-item active">Danh sách người dùng</li>
        </ol>
        <div class="card mb-12">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-6 col-xs-12">
                        <a class="btn btn-success" asp-action="Create" asp-controller="User">Tạo mới</a>
                    </div>
                    <div class="col-md-6 col-xs-12">
                        <form asp-action="Index" method="get">
                            <div class="row">
                                <div class="col-md-9">
                                    <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                                </div>
                                <div class="cold-md-3">
                                    <button type="submit" class="btn btn-primary">Tìm</button>
                                    <button type="button" onclick="window.location.href='/User/Index'" class="btn btn-dark">Reset</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="row">
                    @if (ViewBag.SuccessMsg != null)
                    {
                        <div id="msgAlert" class="alert alert-success" role="alert">
                            @ViewBag.SuccessMsg
                        </div>
                    }
                </div>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th style="width:auto; text-align:center; vertical-align:middle;">
                                    Tài khoản
                                </th>
                                <th style="width:auto; text-align:center; vertical-align:middle;">
                                    Email
                                </th>
                                <th style="width:auto; text-align:center; vertical-align:middle;">
                                    Số điện thoại
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td style="width:auto; text-align:center; vertical-align:middle;">
                                        @Html.DisplayFor(modelItem => item.UserName)
                                    </td>
                                    <td style="width:auto; text-align:center; vertical-align:middle;">
                                        @Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td style="width:auto; text-align:center; vertical-align:middle;">
                                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                                    </td>
                                    <td style="width:auto; text-align:center; vertical-align:middle;">
                                        @Html.ActionLink("Sửa", "Edit", new { id = item.Id }) |
                                        @Html.ActionLink("Xem", "Details", new { id = item.Id }) |
                                        @Html.ActionLink("Xóa", "Delete", new { id = item.Id }) |
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="row">
                    <div class="col-sm-4 col-md-4 col-lg-4 text-center">                      
                    </div>
                    <div class="col-sm-8 col-md-8 col-lg-8">
                        @await Component.InvokeAsync("Pager", Model)
                    </div>
                </div>

                </div>
            </div>
    </div>
